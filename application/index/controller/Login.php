<?php

namespace app\index\controller;

use app\common\service\Sms;
use app\index\service\Auth;
use app\index\service\Token;
use think\Controller;
use app\common\model\User;

/**
 * Class Login
 *
 * @package \app\api\controller
 */
class Login extends Controller
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $token = $this->request
            ->server('HTTP_TOKEN', $this->request->request('token', app()->cookie->get('token')));

        $user = $this->app->cache->get($token);

        if ($user) {
            $this->redirect(url('/user'));
        }
    }

    /**
     * @title 登录@
     */
    public function login()
    {
        return view('login');
    }

    /**
     * @title 验证码登录@
     */
    public function captchaLogin()
    {
        return view('captcha_login');
    }

    /**
     * @title 注册@
     */
    public function register()
    {
        return view('register');
    }

    /**
     * 验证登录
     */
    public function check()
    {
        $param = $this->request->param();

        $user = User::field('*')->where('mobile', $param['mobile'] ?? '')->findOrFail();

        //验证密码
        if ($user['password'] !== Auth::getPassword($param['password'], $user['salt'])) {
            $this->error('密码错误');
        }

        /*
         * 获取token
         */
        $token = Token::get([
            'id' => $user['id'],
            'username' => $user['username'],
            'headimg' => $user['headimg'] ?? '',
            'mobile' => $user['mobile']
        ]);

        $this->app->cookie->set('token', $token);

        $this->success('登录成功', url('/user'), $token);
    }

    /**
     * 验证码检验登录
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function checkCaptchaLogin()
    {
        $param = $this->request->param();

        $user = User::field('id,username,headimg,mobile')->where('mobile', $param['mobile'] ?? '')->findOrFail();

        /*
         * 获取token
         */
        $token = Token::get([
            'id' => $user['id'],
            'username' => $user['username'],
            'headimg' => $user['headimg'] ?? '',
            'mobile' => $user['mobile']
        ]);

        $this->app->cookie->set('token', $token);

        $this->success('登录成功', url('/user'), $token);
    }

    /*
     * 验证注册
     */
    public function checkRegister()
    {
        $param = $this->request->param();

        $salt = getRandChar(6);
        $password = Auth::getPassword($param['password'], $salt);

        $save_data = [
            'password' => $password,
            'salt' => $salt,
            'username' => $param['username'] ?? getRandChar(12),
            'mobile' => $param['mobile'],
            'headimg' => $param['headimg'] ?? ''
        ];

        $result = User::create($save_data);

        if ($result === false) {
            $this->error('数据异常');
        }

        $this->success('注册成功', url('/user'));
    }

    /**
     * 发送验证码
     */
    public function sendSms()
    {
        $mobile = $this->request->param('mobile');

        $result = Sms::send($mobile);

        if ($result === false) {
            $this->error('发送失败,请稍后再试');
        }

        $this->success('发送成功,请注意查收');
    }
}