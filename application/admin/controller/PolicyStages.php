<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019\1\18 0018
 * Time: 11:30
 */

namespace app\admin\controller;

use app\common\controller\AdminBase;
use app\common\model\InsuranceCompany;
use app\common\model\Insured;
use app\common\model\Order;
use app\common\model\Product;
use think\Db;
use app\common\model\AdminUser;

class PolicyStages extends AdminBase
{

    protected $adminId;
    protected $adminPid;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->adminId = session('admin_id');
        $this->adminPid = session('admin_pid');
    }

    //待审核申请
    public function index()
    {
        $data = $this->request->param();
        $admin_id = AdminUser::where('pid', $this->adminId)->column('id');
        $data['admin_id'] = $admin_id;
        $data['status'] = Order::STATUS_APPLY;
        $data = app('order')->search($data);
        return $this->fetch('index', ['data' => $data,'status'=>Order::$status]);
    }

    //新增保单分期
    public function add()
    {
        $products = Product::all();
        $companys = InsuranceCompany::all();
        $areas = app('area')->getArea();
        return $this->fetch('add', ['products'=>$products,'companys'=>$companys,'areas'=>$areas]);
    }

    //保存分期
    public function save()
    {
        if($this->request->isPost()) {
            $data = $this->request->param();
            Db::startTrans();
            try{
                //保存客户信息
                $data['admin_id'] = $this->adminId;
                $result = app('order')->saveInsured($data);
                if($result['code'] != 0){
                    throw new \Exception($result['msg']);
                }
                //保存订单
                $data['insured_id'] = $insured_id = $result['data']['id'];
                $result = app('order')->saveOrder($data);
                if($result['code'] != 0){
                    throw new \Exception($result['msg']);
                }
                //保存订单扩展信息
                $data['order_id'] = $order_id = $result['data']['id'];
                $result = app('order')->saveOrderExt($data);
                if($result['code'] != 0){
                    throw new \Exception($result['msg']);
                }
                //保存投保车辆信息
                $result = app('order')->saveCar($data);
                if($result['code'] != 0){
                    throw new \Exception($result['msg']);
                }
                Db::commit();
                $this->success($result['msg']);
            }catch (\Exception $e){
                Db::rollback();
                $this->error($e->getMessage());
            }
        }
    }

    //新增存续保单分期
    public function subsist()
    {
        $products = Product::all();
        $companys = InsuranceCompany::all();
        $areas = app('area')->getArea();
        return $this->fetch('addsubsist', ['products'=>$products,'companys'=>$companys,'areas'=>$areas]);
    }

    //根据手机号查询客户信息
    public function getcustomer($mobile)
    {
        if($mobile && strlen($mobile) == 11){
            $data = app('order')->getInsuredByMobile($mobile);
            $this->result($data);
        }
        $this->result('手机号错误', 1);
    }

    //客户列表
    public function customer(Insured $insured)
    {
        $data = $this->request->param();
        $query = $insured->withSearch(['keyword', 'sort'], [
            'custom' => 'name|mobile',
            'keyword' => $data['keyword'] ?? '',
            'sort' => ['id' => 'desc']
        ]);

        $admin_id = $this->adminId;
        if($this->adminPid == 0){
            $admin_id = AdminUser::where('pid', $this->adminId)->column('id');
        }
        $query->where(['admin_id' => $admin_id]);
        $data = $query->paginate($this->size, false, array_query($data));
        return $this->fetch('customer', ['data' => $data]);
    }

    //分期申请查询
    public function apply()
    {
        $data = $this->request->param();
        $admin_id = $this->adminId;
        if($this->adminPid == 0) {
            $admin_id = AdminUser::where('pid', $this->adminId)->column('id');
        }
        $data['admin_id'] = $admin_id;
        $data['type'] = Order::TYPE_INSURANCE;
        $data = app('order')->search($data);
        return $this->fetch('apply', ['data' => $data,'status'=>Order::$status]);
    }

    //存续保单验真
    public function verify()
    {
        $data = $this->request->param();
        $admin_id = $this->adminId;
        if($this->adminPid == 0) {
            $admin_id = AdminUser::where('pid', $this->adminId)->column('id');
        }
        $data['admin_id'] = $admin_id;
        $data['type'] = Order::TYPE_INSURANCE;
        $data['is_renewal'] = Order::RENEWAL_TRUE;
        $data = app('order')->search($data);
        return $this->fetch('verify', ['data' => $data,'status'=>Order::$status]);
    }

}